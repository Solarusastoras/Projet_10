swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

/user/account:
  get:
    tags:
      - Account Module
    summary: Retrieve all account information
    description: API to retrieve all account information
    produces:
      - application/json
    responses:
      "200":
        description: Successful retrieval of account information
      "401":
        description: Unauthorized
  /user/account/description/{descriptionId}:
    put:
      tags:
        - Account Module
      summary: Update account description
      description: API to update account description
      parameters:
        - name: descriptionId
          in: path
          required: true
          type: string
          description: ID of the description to update
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
                example: "New account description"
      produces:
        - application/json
      responses:
        "200":
          description: Successful update of account description
        "400":
          description: Bad request
        "401":
          description: Unauthorized
  /user/account/note/{noteId}:
    post:
      tags:
        - Account Module
      summary: Create a note
      description: API to create a note
      parameters:
        - name: noteId
          in: path
          required: true
          type: string
          description: ID of the note to create
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
                example: "This is a new note"
      produces:
        - application/json
      responses:
        "201":
          description: Note created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
    delete:
      tags:
        - Account Module
      summary: Delete a note
      description: API to delete a note
      parameters:
        - name: noteId
          in: path
          required: true
          type: string
          description: ID of the note to delete
      produces:
        - application/json
      responses:
        "200":
          description: Note deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
    put:
      tags:
        - Account Module
      summary: Update a note
      description: API to update a note
      parameters:
        - name: noteId
          in: path
          required: true
          type: string
          description: ID of the note to update
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
                example: "Updated note content"
      produces:
        - application/json
      responses:
        "200":
          description: Note updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
